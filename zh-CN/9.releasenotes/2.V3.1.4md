# 发布说明

本文主要介绍 3.1.4 版本 OceanBase 数据库的新特征，以及在之前版本数据库基础上新增的功能和做出的改动。

## 概要说明

在 V3.1.4 版本，OceanBase 数据库针对社区项目应用反馈，优化提升内核易用性与稳定性，服务广大社区用户。

* 内核能力提升：支持数据文件动态按需分配，支持直方图类型统计信息采集与监控。

* 稳定性提升：多模 OBKV 支持历史数据过期清理，扩展单表大事务能力上限。

* 易用性提升：支持删除单条缓存计划，优化日志与错误码展示等，ob-operator 支持部署 OBProxy，开源最新测试套框架。

## 特性更新

### 支持数据文件动态按需分配

OceanBase 数据库是一款分布式磁盘数据库，在系统逻辑架构上使用宏块（Macro Block）与微块（Micro Block）对数据进行组织管理，在物理存储上则使用 ssblock 文件进行数据存储。当前 OceanBase 的 ssblock 文件采用预先全额分配并占用的磁盘空间管理方式，该分配方式保障了 OceanBase 数据库在使用过程中的磁盘资源可获取性，可避免因磁盘空间不足导致数据持久化失败，减少系统运行时的风险。

同时本次版本迭代 OceanBase 数据库新增支持数据文件动态按需分配，您只需要配置磁盘自动增长步长 datafile_next 和磁盘空间自动分配上限值 datafile_maxsize 即可。

OceanBase 数据库主要采用定时任务的方式进行磁盘空间调整，核心能力如下：

* 依据 ssblock 磁盘空间的初始值设定，使用定时任务后台统计与计算，当磁盘使用率达到 95%（可配置）时，自动触发磁盘空间扩展。

* 在分配的磁盘报空间不足时，系统根据配置自动进行磁盘空间扩展。

* 不支持单 OBServer 节点数据文件空间回收，若您希望减少并释放当前磁盘空间使用量，可通过对集群加减机器的方式（集群扩缩容）进行。

详细信息请参考 [datafile_next](../12.reference-guide/3.system-configuration-items/246.datafile_next.md) 和 [datafile_maxsize](../12.reference-guide/3.system-configuration-items/245.datafile_maxsize.md)。

### 支持直方图类型统计信息采集与监控

新增支持直方图类型统计信息采集与监控。结合 Prometheus 的直方图类型（Histogram）监控指标，在 OceanBase 数据库内部定义和生成新的统计信息表，记录 99、95 等分位的统计数据，通过 obagent 开源组件输出到 Prometheus 进行展示，提升产品易用性。

> **注意**
>
> 该功能启用时会带来少量写性能损耗。

OceanBase 数据库的直方图类型统计信息提供如下能力：

* 支持视图 QUERY_RESPONSE_TIME，定义在 INFORMATION_SCHEMA 中。详细信息请参考 [information_schema.QUERY_RESPONSE_TIME](../12.reference-guide/1.system-views/1.dictionary-views/60.information_schema-QUERY_RESPONSE_TIME.md)。

* 支持系统变量 query_response_time_stats， 设置统计开关启动。详细信息请参考 [query_response_time_stats](../12.reference-guide/3.system-configuration-items/252.query_response_time_stats.md)。

* 支持系统变量 query_response_time_range_base，设置统计间隔时间。详细信息请参考 [query_response_time_range_base](../12.reference-guide/3.system-configuration-items/251.query_response_time_range_base.md)。

* 支持系统变量 query_response_time_flush，设置刷新统计数据且重新读取数据。详细信息请参考 [query_response_time_flush](../12.reference-guide/3.system-configuration-items/250.query_response_time_flush.md)。

* 支持 obagent 组件读取该视图，在 Prometheus 中生成直方图。

### 多模数据库（OBKV）支持历史数据过期清理

新增支持多模数据库（OBKV）支持历史数据过期清理。

OceanBase 数据库采用服务端维护过期数据的方式，支持基于 TIMESTAMP 的时间过期回收和 MAXVERSION 版本过期的回收，可在 column family 表的 comment 中设置表数据的过期时间和多版本数量，OceanBase 内部采用周期性后台任务，在 Partition Service 层基于分区粒度开启事务扫描并清理过期数据。

核心能力如下：

* 新增租户级系统表 __all_kv_ttl_task 和 __all_kv_ttl_task_history，用以记录内部周期 TTL 任务状态和 TTL 任务的历史操作记录。该历史记录表需要进行垃圾回收，以维护该表记录数的稳定，类似于其他 History 表的 GC 策略。

* 新增视图 DBA_OB_KV_TTL_TASKS 和 DBA_OB_KV_TTL_TASK_HISTORY，便于查看本租户下的 TTL 当前 TTL 任务和历史 TTL 任务。

* 新增虚拟表 __all_virtual_kv_ttl_task 和 __all_virtual_kv_ttl_task_history，以及对应的两个视图 CDB_OB_KV_TTL_TASKS 和 CDB_OB_KV_TTL_TASK_HISTORY，便于在系统租户下查看所有租户当前正在执行的 TTL 任务和历史 TTL 任务。

* 增加配置项 kv_ttl_duty_duration 用以限制 TTL 周期任务的后台运行时间，如果没有执行完，则内部把没有执行完的任务挂起来，后面再次进入到任务运行时间段的时候，继续上次挂起来的任务。可以根据业务运行特征，设置 TTL 后台任务的执行时间。

* 新增配置项 enable_kv_ttl 用于表示是否启动 TTL 后台任务，kv_ttl_history_recycle_interval 用以描述 TTL 任务历史记录保留的时间段。

* 内存使用与限流，后台 TTL 任务根据 MEMStore 的内存使用量动态调整任务进度。

* 事务使用与限流，后台 TTL 任务限制每次查询和删除的表记录条数，分批次提交事务，控制大事务的产生，同时支持锁冲突回滚当前事务。

详细信息请参考 [HBaseAPI 过期数据删除功能](../../18.supporting-tools/8.hbaseapi/4.use-of-ttl.md)。

### 支持失效单条 SQL 缓存计划

支持失效单条 SQL 的缓存计划，当 DBA 诊断出某条 SQL 的执行计划不合理时，可以根据 SQL ID 做细粒度计划缓存的淘汰，避免失效整个 Plan Cache 影响系统性能稳定。使用方法如下：

* 系统租户通过 `ALTER SYSTEM FLUSH PLAN CACHE [ [SQL_identifier] [db_list] tenant_list ][global];` 命令指定失效某租户下特定或全部 SQL 的计划。

* MySQL 租户通过增加命令 `ALTER SYSTEM FLUSH PLAN CACHE [ [ SQL_identifier ] [db_list] ] [global];` 失效特定或全部 SQL 的计划。

### 产品易用性增强

* ob-operator 支持部署 OBProxy，便于使用多节点的集群，同时提升集群路由准确度。详细信息请参考 [部署 OBProxy](../3.installation-and-deployment/16.deploy-ob-in-kubernetes-via-ob-operator.md)。

* OceanBase 数据库因需要 MySQL 错误码兼容，在生产日志阶段做了内外部错误码转换，用户在客户端看到的错误码和日志中记录的错误码不一致，无法通过错误码在日志中直接检错到相关信息，给排查问题带来不少困惑。为此，OceanBase 数据库在日志生成阶段，同时记录输出客户端看到的错误码（user_error_code）和内部错误码（internal_error_code），方便根据错误码查找定位问题。

* 针对 `update [table_name] set [column_name];` 语句，优化执行失败信息返回，在报错 `Data too long for column` 时明确对应出错的列信息。

* 开源最新版本的 OBClient 客户端以及测试驱动框架，帮助社区开发者快速参与到代码开发和测试工作，降低入门门槛。

## 行为变更

* 禁止修改 lower_case_table_names 变量

  lower_case_table_names 变量是全局只读变量，因此我们禁止通过 `set global lower_case_table_names;` 和 `alter tenant [tenant_name] set variables lower_case_table_names;` 语句对该变量进行修改。

* 在自动扩容开启的情况下，__all_virtual_disk_stat 的 total_size 字段统计值是可存储磁盘空间的最大值。

## 问题修复

* 修复系统变量 datadir 的内容显示，采用集群配置项 data_dir 的内容，该系统变量为只读变量不支持修改。

* 修复去除大事务内部限制，取消事务组 log_id 生成大小的限制，同时增加配置项 _max_trx_size 避免生成事务过大给数据库带来负面影响。

* 修复表名称无法存储超过 64 个字符的问题。

* 修复查询带 `/*+  LEADING  */` 功能时，执行时报错 `Invalid argument` 的问题。

* 修复创建表使用 `create table t select ~1;` 语法报错 4016 的问题。

* 修复 SQL 多行注释的问题。

* 修改 `show full columns` 命令对应的虚拟表定义，完善 MySQL 兼容性。
